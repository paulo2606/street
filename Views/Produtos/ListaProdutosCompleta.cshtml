@model List<street.Models.Produto>

@{
    ViewData["Title"] = "Catalogo - SS Moda";
    ViewData["HideHeroSection"] = true;
}

<head>
    <link rel="stylesheet" href="~/css/catalogo.css">
    <style>
        .btn-custom {
            display: inline-block;
            padding: 8px 15px;
            font-size: 14px;
            font-weight: bold;
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
            white-space: nowrap;
        }

            .btn-custom:hover {
                opacity: 0.9;
            }

        .btn-edit {
            background-color: #28a745;
            color: white;
            border: 1px solid #28a745;
            margin-right: 5px;
        }

            .btn-edit:hover {
                background-color: #218838;
                border-color: #1e7e34;
            }

        .btn-delete {
            background-color: #dc3545;
            color: white;
            border: 1px solid #dc3545;
        }

            .btn-delete:hover {
                background-color: #c82333;
                border-color: #bd2130;
            }

        .product-actions {
            margin-top: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .btn-primary {
            background-color: #007bff;
            color: white;
            border: 1px solid #007bff;
            padding: 10px 20px;
            font-weight: bold;
            border-radius: 5px;
            text-decoration: none;
            display: inline-block;
            margin-bottom: 20px;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #004085;
            }
    </style>
</head>

<div class="catalog-content">
    <aside class="filters-sidebar">
        <br />
        <br />
        <button class="apply-filters">Aplicar Filtros</button>
        <button class="clear-filters">Limpar Filtros</button>
    </aside>
    <section class="products-section">

        <div class="products-grid">
            @if (Model != null && Model.Any())
            {
                foreach (var produto in Model)
                {
                    <div class="product-item">
                        <a asp-controller="Produtos" asp-action="DetalheProduto" asp-route-id="@produto.Id" class="product-link">
                            <img src="@produto.ImageUrl" alt="@produto.Nome" class="product-image-placeholder" style="width: 100%; height: 200px; object-fit: cover;">
                        </a>
                        <p class="product-name">@produto.Nome</p>
                        <p class="product-price">R$ @produto.Preco.ToString("N2")</p>

                        @if (User.IsInRole("Admin"))
                        {
                            <div class="product-actions">
                                <a asp-controller="Produtos" asp-action="EditarProduto" asp-route-id="@produto.Id" class="btn-custom btn-edit">Editar</a>
                                <button type="button" class="btn-custom btn-delete delete-product-btn" data-id="@produto.Id" data-name="@produto.Nome">Deletar</button>
                            </div>
                        }
                    </div>
                }
            }
            else
            {
                <p class="col-12 text-center">Nenhum produto disponível no momento. Por favor, adicione produtos ao banco de dados.</p>
            }

        </div>

        @if (User.IsInRole("Admin"))
        {
            <p>
                <a asp-controller="Produtos" asp-action="CriarProduto" class="btn btn-primary">Adicionar Novo Produto</a>
            </p>
        }
    </section>

    <script src="~/js/scriptListaProdutosCompleta.js"></script>

    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                if ('@User.IsInRole("Admin")' === 'True') {
                    var deleteButtons = document.querySelectorAll('.delete-product-btn');

                    deleteButtons.forEach(function (button) {
                        button.addEventListener('click', function () {
                            var productId = this.getAttribute('data-id');
                            var productName = this.getAttribute('data-name');

                            var confirmDelete = confirm(`Tem certeza que deseja excluir o produto "${productName}"?`);

                            if (confirmDelete) {
                                var form = document.createElement('form');
                                form.method = 'post';
                                form.action = `/Produtos/DeletarProduto/${productId}`;

                                var antiForgeryInput = document.createElement('input');
                                antiForgeryInput.type = 'hidden';
                                antiForgeryInput.name = '__RequestVerificationToken';
                                antiForgeryInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;

                                document.body.appendChild(form);
                                form.appendChild(antiForgeryInput);
                                form.submit();
                            }
                        });
                    });
                }
            });
        </script>
    }
</div>